{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8cfea9c2_8151d66a",
        "filename": "src/org/lineageos/setupwizard/FinishActivity.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-07-21T05:13:50Z",
      "side": 1,
      "message": "This is the code returned by `finalizeProvisioning`, ideally we need to find why this is the case since it should be returning the same result that ManagedProvisioning receives (-1 which is RESULT_OK). `startProvisioning` returns some custom code.",
      "range": {
        "startLine": 77,
        "startChar": 46,
        "endLine": 77,
        "endChar": 61
      },
      "revId": "c356bf388fcacc005e72b415964ca14df3b683cd",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a6339ff_7dcb0149",
        "filename": "src/org/lineageos/setupwizard/FinishActivity.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-07-24T19:41:50Z",
      "side": 1,
      "message": "`finalizeProvisioning` in ManagedProvisioningUtils.java uses `FLAG_ACTIVITY_NEW_TASK`. The [startActivityForResult documentation](https://developer.android.com/reference/android/app/Activity#startActivityForResult(android.content.Intent,%20int,%20android.os.Bundle) states that this will immediately lead to a cancel result:\n\n\u003e Note that this method should only be used with Intent protocols that are defined to return a result. In other protocols (such as Intent#ACTION_MAIN or Intent#ACTION_VIEW), you may not get the result when you expect. For example, if the activity you are launching uses Intent#FLAG_ACTIVITY_NEW_TASK, it will not run in your task and thus you will immediately receive a cancel result.\n\nSo, I suppose that\u0027s what\u0027s happening.",
      "parentUuid": "8cfea9c2_8151d66a",
      "range": {
        "startLine": 77,
        "startChar": 46,
        "endLine": 77,
        "endChar": 61
      },
      "revId": "c356bf388fcacc005e72b415964ca14df3b683cd",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbcee64a_1f8cbe5c",
        "filename": "src/org/lineageos/setupwizard/FinishActivity.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-07-24T21:05:52Z",
      "side": 1,
      "message": "`onActivityResult` is doing double duty handling results of two different activities, called by startProvisioning and finalizeProvisioning, with no way to differentiate between them. `startProvisioning` seems to return 122 when successful, which is `RESULT_CODE_WORK_PROFILE_CREATED`, for which docs say, \"Returned after the work profile has been completed. Note this is before launching the DPC.\"\n\nWell, we need to know what\u0027s returning what, and right now we can\u0027t know.\n\nThis all revealed a very confusing mechanism in BaseSetupWizardActivity, designed to allow a familiar-sounding method named `startActivityForResult` to be called, but it\u0027s not what it sounds like - it\u0027s a custom implementation that does not support request codes and thus has no way to differentiate results. It uses the new androidx mechanism under the hood but without the flexibility of custom callbacks.\n\nSo, before I do anything else with this, I feel a strong need to make some adjustments in a precursor change to avoid on-going confusion, since this has come up before and has already confused me for at least a cumulative hour, along with adding a way to use a callback. I\u0027ll make another change for that and then resolve this before moving forward.",
      "parentUuid": "2a6339ff_7dcb0149",
      "range": {
        "startLine": 77,
        "startChar": 46,
        "endLine": 77,
        "endChar": 61
      },
      "revId": "c356bf388fcacc005e72b415964ca14df3b683cd",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    }
  ]
}